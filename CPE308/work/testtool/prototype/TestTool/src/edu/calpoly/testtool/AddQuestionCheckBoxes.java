/*
 * AddQuestionGenericView.java
 */

package edu.calpoly.testtool;

import org.jdesktop.application.Action;
import org.jdesktop.application.ResourceMap;
import org.jdesktop.application.SingleFrameApplication;
import org.jdesktop.application.FrameView;
import org.jdesktop.application.TaskMonitor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.Timer;
import javax.swing.Icon;
import javax.swing.JDialog;
import javax.swing.JFrame;

/**
 * The application's main frame.
 */
public class AddQuestionCheckBoxes extends FrameView {

    public AddQuestionCheckBoxes(SingleFrameApplication app) {
        super(app);

        initComponents();
        HiddenCheck.setVisible(false);
        HiddenText.setVisible(false);
        ClassBox.setEditable(true);

        // status bar initialization - message timeout, idle icon and busy animation, etc
        /*ResourceMap resourceMap = getResourceMap();
        int messageTimeout = resourceMap.getInteger("StatusBar.messageTimeout");
        messageTimer = new Timer(messageTimeout, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                statusMessageLabel.setText("");
            }
        });
        messageTimer.setRepeats(false);
        int busyAnimationRate = resourceMap.getInteger("StatusBar.busyAnimationRate");
        for (int i = 0; i < busyIcons.length; i++) {
            busyIcons[i] = resourceMap.getIcon("StatusBar.busyIcons[" + i + "]");
        }
        busyIconTimer = new Timer(busyAnimationRate, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                busyIconIndex = (busyIconIndex + 1) % busyIcons.length;
                statusAnimationLabel.setIcon(busyIcons[busyIconIndex]);
            }
        });
        idleIcon = resourceMap.getIcon("StatusBar.idleIcon");
        statusAnimationLabel.setIcon(idleIcon);
        progressBar.setVisible(false);

        // connecting action tasks to status bar via TaskMonitor
        TaskMonitor taskMonitor = new TaskMonitor(getApplication().getContext());
        taskMonitor.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                String propertyName = evt.getPropertyName();
                if ("started".equals(propertyName)) {
                    if (!busyIconTimer.isRunning()) {
                        statusAnimationLabel.setIcon(busyIcons[0]);
                        busyIconIndex = 0;
                        busyIconTimer.start();
                    }
                    progressBar.setVisible(true);
                    progressBar.setIndeterminate(true);
                } else if ("done".equals(propertyName)) {
                    busyIconTimer.stop();
                    statusAnimationLabel.setIcon(idleIcon);
                    progressBar.setVisible(false);
                    progressBar.setValue(0);
                } else if ("message".equals(propertyName)) {
                    String text = (String)(evt.getNewValue());
                    statusMessageLabel.setText((text == null) ? "" : text);
                    messageTimer.restart();
                } else if ("progress".equals(propertyName)) {
                    int value = (Integer)(evt.getNewValue());
                    progressBar.setVisible(true);
                    progressBar.setIndeterminate(false);
                    progressBar.setValue(value);
                }
            }
        });
    }

    @Action
    public void showAboutBox() {
        if (aboutBox == null) {
            JFrame mainFrame = AddQuestionGeneric.getApplication().getMainFrame();
            aboutBox = new AddQuestionGenericAboutBox(mainFrame);
            aboutBox.setLocationRelativeTo(mainFrame);
        }
        AddQuestionGeneric.getApplication().show(aboutBox);*/
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        DifficultySpinner = new javax.swing.JSpinner(new javax.swing.SpinnerNumberModel(1, 1, 5, 1));
        DifficultyLabel = new javax.swing.JLabel();
        TimeSpinner = new javax.swing.JSpinner(new javax.swing.SpinnerNumberModel(1, 1, 5, 1));
        TimeAllowedLabel = new javax.swing.JLabel();
        ClassLabel = new javax.swing.JLabel();
        ClassBox = new javax.swing.JComboBox();
        TimeAllowedLabel2 = new javax.swing.JLabel();
        ToQLabel = new javax.swing.JLabel();
        ToQBox = new javax.swing.JComboBox();
        QuestionLabel = new javax.swing.JLabel();
        AnswerLabel = new javax.swing.JLabel();
        QuestionPane = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jEditorPane1 = new javax.swing.JEditorPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        jEditorPane2 = new javax.swing.JEditorPane();
        DoneButton = new javax.swing.JButton();
        CancelButton = new javax.swing.JButton();
        HTMLFileLabel = new javax.swing.JLabel();
        HTMLFileField = new javax.swing.JFormattedTextField();
        jLabel1 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        HiddenCheck = new javax.swing.JCheckBox();
        HiddenText = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        mainPanel.setName("Add a Question");
        mainPanel.setPreferredSize(new java.awt.Dimension(1280, 720));

        DifficultySpinner.setModel(new javax.swing.SpinnerNumberModel(1, 1, 5, 1));
        DifficultySpinner.setName("DifficultySpinner"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(edu.calpoly.testtool.TestToolApp.class).getContext().getResourceMap(AddQuestionCheckBoxes.class);
        DifficultyLabel.setText(resourceMap.getString("DifficultyLabel.text")); // NOI18N
        DifficultyLabel.setName("DifficultyLabel"); // NOI18N

        TimeSpinner.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1), Integer.valueOf(1), null, Integer.valueOf(1)));
        TimeSpinner.setName("TimeSpinner"); // NOI18N

        TimeAllowedLabel.setText(resourceMap.getString("TimeAllowedLabel.text")); // NOI18N
        TimeAllowedLabel.setName("TimeAllowedLabel"); // NOI18N

        ClassLabel.setText(resourceMap.getString("ClassLabel.text")); // NOI18N
        ClassLabel.setName("ClassLabel"); // NOI18N

        ClassBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "CPE101", "CPE102" }));
        ClassBox.setName("ClassBox"); // NOI18N

        TimeAllowedLabel2.setText(resourceMap.getString("TimeAllowedLabel2.text")); // NOI18N
        TimeAllowedLabel2.setName("TimeAllowedLabel2"); // NOI18N

        ToQLabel.setText(resourceMap.getString("ToQLabel.text")); // NOI18N
        ToQLabel.setName("ToQLabel"); // NOI18N

        ToQBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "Check Boxes", "Drawn Answer", "Essay", "Fill in the Blank", "Matching", "Multiple Choice", "Point and Click", "Programming", "Short Answer", "True/False" }));
        ToQBox.setSelectedIndex(1);
        ToQBox.setName("ToQBox"); // NOI18N
        ToQBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ToQBoxActionPerformed(evt);
            }
        });

        QuestionLabel.setText(resourceMap.getString("QuestionLabel.text")); // NOI18N
        QuestionLabel.setName("QuestionLabel"); // NOI18N

        AnswerLabel.setText(resourceMap.getString("AnswerLabel.text")); // NOI18N
        AnswerLabel.setName("AnswerLabel"); // NOI18N

        QuestionPane.setTabPlacement(javax.swing.JTabbedPane.BOTTOM);
        QuestionPane.setName("QuestionPane"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        jEditorPane1.setText(resourceMap.getString("jEditorPane1.text")); // NOI18N
        jEditorPane1.setName("jEditorPane1"); // NOI18N
        jScrollPane1.setViewportView(jEditorPane1);

        QuestionPane.addTab(resourceMap.getString("jScrollPane1.TabConstraints.tabTitle"), jScrollPane1); // NOI18N

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        jEditorPane2.setText(resourceMap.getString("jEditorPane2.text")); // NOI18N
        jEditorPane2.setName("jEditorPane2"); // NOI18N
        jScrollPane2.setViewportView(jEditorPane2);

        QuestionPane.addTab(resourceMap.getString("jScrollPane2.TabConstraints.tabTitle"), jScrollPane2); // NOI18N

        DoneButton.setText(resourceMap.getString("DoneButton.text")); // NOI18N
        DoneButton.setMaximumSize(new java.awt.Dimension(65, 25));
        DoneButton.setMinimumSize(new java.awt.Dimension(65, 25));
        DoneButton.setName("DoneButton"); // NOI18N
        DoneButton.setPreferredSize(new java.awt.Dimension(65, 25));
        DoneButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DoneButtonMouseClicked(evt);
            }
        });

        CancelButton.setText(resourceMap.getString("CancelButton.text")); // NOI18N
        CancelButton.setAutoscrolls(true);
        CancelButton.setMaximumSize(new java.awt.Dimension(65, 25));
        CancelButton.setMinimumSize(new java.awt.Dimension(65, 25));
        CancelButton.setName("CancelButton"); // NOI18N
        CancelButton.setPreferredSize(new java.awt.Dimension(65, 25));
        CancelButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CancelButtonMouseClicked(evt);
            }
        });

        HTMLFileLabel.setText(resourceMap.getString("HTMLFileLabel.text")); // NOI18N
        HTMLFileLabel.setName("HTMLFileLabel"); // NOI18N

        HTMLFileField.setText(resourceMap.getString("HTMLFileField.text")); // NOI18N
        HTMLFileField.setName("HTMLFileField"); // NOI18N

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setLabelFor(mainPanel);
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        jCheckBox1.setSelected(true);
        jCheckBox1.setText(resourceMap.getString("jCheckBox1.text")); // NOI18N
        jCheckBox1.setName("jCheckBox1"); // NOI18N

        jCheckBox2.setText(resourceMap.getString("jCheckBox2.text")); // NOI18N
        jCheckBox2.setName("jCheckBox2"); // NOI18N

        jTextField1.setText(resourceMap.getString("jTextField1.text")); // NOI18N
        jTextField1.setName("jTextField1"); // NOI18N

        jTextField2.setText(resourceMap.getString("jTextField2.text")); // NOI18N
        jTextField2.setName("jTextField2"); // NOI18N

        jButton1.setText(resourceMap.getString("jButton1.text")); // NOI18N
        jButton1.setName("jButton1"); // NOI18N
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        HiddenCheck.setName("HiddenCheck"); // NOI18N

        HiddenText.setText(resourceMap.getString("HiddenText.text")); // NOI18N
        HiddenText.setName("HiddenText"); // NOI18N

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(mainPanelLayout.createSequentialGroup()
                                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(QuestionLabel)
                                    .addComponent(DifficultyLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(mainPanelLayout.createSequentialGroup()
                                        .addComponent(DifficultySpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(129, 129, 129)
                                        .addComponent(TimeAllowedLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(TimeSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(TimeAllowedLabel2))
                                    .addComponent(QuestionPane, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(94, 94, 94)
                                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(mainPanelLayout.createSequentialGroup()
                                        .addComponent(ClassLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(ClassBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(342, 342, 342)
                                        .addComponent(ToQLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(ToQBox, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(mainPanelLayout.createSequentialGroup()
                                        .addComponent(AnswerLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(mainPanelLayout.createSequentialGroup()
                                                .addComponent(jCheckBox1)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jButton1)
                                            .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addGroup(mainPanelLayout.createSequentialGroup()
                                                    .addComponent(HiddenCheck)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(HiddenText, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(mainPanelLayout.createSequentialGroup()
                                                    .addComponent(jCheckBox2)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                                .addComponent(HTMLFileLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(HTMLFileField, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 655, Short.MAX_VALUE)
                                .addComponent(CancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(DoneButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(547, 547, 547)
                        .addComponent(jLabel1)))
                .addContainerGap())
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(8, 8, 8)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DifficultyLabel)
                    .addComponent(DifficultySpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TimeSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TimeAllowedLabel)
                    .addComponent(TimeAllowedLabel2)
                    .addComponent(ClassLabel)
                    .addComponent(ClassBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ToQBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ToQLabel))
                .addGap(158, 158, 158)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(QuestionLabel)
                            .addComponent(AnswerLabel)
                            .addComponent(QuestionPane, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 89, Short.MAX_VALUE)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(DoneButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(HTMLFileLabel)
                            .addComponent(HTMLFileField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(mainPanelLayout.createSequentialGroup()
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(mainPanelLayout.createSequentialGroup()
                                .addComponent(jCheckBox1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCheckBox2)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(mainPanelLayout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addComponent(HiddenText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(HiddenCheck))
                        .addGap(13, 13, 13)
                        .addComponent(jButton1)))
                .addContainerGap())
        );

        jMenuBar1.setName("jMenuBar1"); // NOI18N

        jMenu1.setText(resourceMap.getString("jMenu1.text")); // NOI18N
        jMenu1.setName("jMenu1"); // NOI18N
        jMenuBar1.add(jMenu1);

        jMenu2.setText(resourceMap.getString("jMenu2.text")); // NOI18N
        jMenu2.setName("jMenu2"); // NOI18N
        jMenuBar1.add(jMenu2);

        setComponent(mainPanel);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        HiddenCheck.setVisible(true);
        HiddenText.setVisible(true);
    }//GEN-LAST:event_jButton1MouseClicked

    private void ToQBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ToQBoxActionPerformed
         javax.swing.JComboBox cb = (javax.swing.JComboBox)evt.getSource();
        String petName = (String)cb.getSelectedItem();
         if(petName == "-")
        {
            SingleFrameApplication app = (SingleFrameApplication)this.getApplication();
        app.show(new AddQuestionGenericView(app));
        app.hide(this);
        }
        else if(petName == "Check Boxes")
        {
            SingleFrameApplication app = (SingleFrameApplication)this.getApplication();
        app.show(new AddQuestionCheckBoxes(app));
        app.hide(this);
        }
        else if(petName == "True/False")
        {
            SingleFrameApplication app = (SingleFrameApplication)this.getApplication();
        app.show(new AddQuestionTrueFalse(app));
        app.hide(this);
        }
        else if(petName == "Multiple Choice")
        {
            SingleFrameApplication app = (SingleFrameApplication)this.getApplication();
        app.show(new AddMultipleChoiceQuestionView(app));
        app.hide(this);
        }
        else if(petName == "Programming")
        {
            SingleFrameApplication app = (SingleFrameApplication)this.getApplication();
        app.show(new AddProgrammingQuestionView(app));
        app.hide(this);
        }
        else if(petName == "Short Answer")
        {
            SingleFrameApplication app = (SingleFrameApplication)this.getApplication();
        app.show(new AddShortAnswerQuestionView(app));
        app.hide(this);
        }
        else
        {
            SingleFrameApplication app = (SingleFrameApplication)this.getApplication();
        app.show(new AddQuestionGenericView(app));
        app.hide(this);
        }
    }//GEN-LAST:event_ToQBoxActionPerformed

    private void DoneButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DoneButtonMouseClicked
        SingleFrameApplication app = (SingleFrameApplication)this.getApplication();
        app.hide(this);
    }//GEN-LAST:event_DoneButtonMouseClicked

    private void CancelButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CancelButtonMouseClicked
        SingleFrameApplication app = (SingleFrameApplication)this.getApplication();
        app.hide(this);
    }//GEN-LAST:event_CancelButtonMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AnswerLabel;
    private javax.swing.JButton CancelButton;
    private javax.swing.JComboBox ClassBox;
    private javax.swing.JLabel ClassLabel;
    private javax.swing.JLabel DifficultyLabel;
    private javax.swing.JSpinner DifficultySpinner;
    private javax.swing.JButton DoneButton;
    private javax.swing.JFormattedTextField HTMLFileField;
    private javax.swing.JLabel HTMLFileLabel;
    private javax.swing.JCheckBox HiddenCheck;
    private javax.swing.JTextField HiddenText;
    private javax.swing.JLabel QuestionLabel;
    private javax.swing.JTabbedPane QuestionPane;
    private javax.swing.JLabel TimeAllowedLabel;
    private javax.swing.JLabel TimeAllowedLabel2;
    private javax.swing.JSpinner TimeSpinner;
    private javax.swing.JComboBox ToQBox;
    private javax.swing.JLabel ToQLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JEditorPane jEditorPane1;
    private javax.swing.JEditorPane jEditorPane2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JPanel mainPanel;
    // End of variables declaration//GEN-END:variables

}
